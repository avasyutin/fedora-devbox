- name: check installed
  command: test -x {{ rbenv_root }}
  register: rbenv_installed
  ignore_errors: yes
- name: clone repo
  git: repo=git://github.com/sstephenson/rbenv.git dest={{ rbenv_root }} accept_hostkey=yes update=yes
- name: install rbenv-each
  git: repo=git://github.com/rbenv/rbenv-each.git dest={{ rbenv_root }}/plugins/rbenv-each accept_hostkey=yes update=yes
- name: install ruby-build
  git: repo=git://github.com/sstephenson/ruby-build.git dest={{ rbenv_root }}/plugins/ruby-build accept_hostkey=yes update=yes
- name: update path
  shell: echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> /home/{{ dev_user }}/.bashrc
  when: rbenv_installed is failed
- name: init
  shell: echo 'eval "$(rbenv init -)"' >> /home/{{ dev_user }}/.bashrc
  when: rbenv_installed is failed
- name: check ruby installed
  shell: RBENV_ROOT={{ rbenv_root }} PATH="$RBENV_ROOT/bin:$PATH" rbenv versions | grep {{ ruby_version }}
  register: ruby_installed
  ignore_errors: yes
- name: install ruby
  shell: RBENV_ROOT={{ rbenv_root }} PATH="$RBENV_ROOT/bin:$PATH" rbenv install {{ ruby_version }}
  args:
    executable: /bin/bash
  when: ruby_installed is failed
- name: set global ruby
  when: ruby_installed is failed
  shell: RBENV_ROOT={{ rbenv_root }} PATH="$RBENV_ROOT/bin:$PATH" rbenv global {{ ruby_version }}
- name: rehash
  shell: RBENV_ROOT={{ rbenv_root }} PATH="$RBENV_ROOT/bin:$PATH" rbenv rehash
- name: create .gemrc
  lineinfile: 'dest=/home/{{ dev_user }}/.gemrc owner={{ dev_user }} group={{ dev_user }} mode=0644 line="gem: --no-ri --no-rdoc" create=yes state=present'
- name: update rubygems
  shell: RBENV_ROOT={{ rbenv_root }} PATH="$RBENV_ROOT/versions/{{ ruby_version }}/bin:$PATH" gem update --system
- name: update installed gems
  shell: RBENV_ROOT={{ rbenv_root }} PATH="$RBENV_ROOT/versions/{{ ruby_version }}/bin:$PATH" gem update -N -f
- name: install gems
  shell: RBENV_ROOT={{ rbenv_root }} PATH="$RBENV_ROOT/versions/{{ ruby_version }}/bin:$PATH" gem install -N -f {{ item }}
  with_items: '{{ global_gems }}'
